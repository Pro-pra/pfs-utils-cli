#!/bin/sh
#rebuild loaded or installed pfs, by betcher, GPL v3.
#VERSION 3.0
. /usr/bin/pfsfunc

if [ ! "$1" ]; then
  echo "Usage: $(basename "$0") <PACKAGE> <args for mkpfs> " >&2; exit 1
fi

package_name=$(basename $1 |sed 's/\.pfs//')
shift

fileslist="${PFSDIR}/install/$package_name/pfs.files"
[ -f $fileslist ] || fileslist="${PFSDIR}/mount/$package_name/pfs.files"
dirsempty=$(echo $fileslist | sed 's/pfs.files/pfs.dirs.empty/')

# find pfs files in pfs contaners
if ! [ -f $fileslist ] ;then
	package_list=$(ls ${prefixmp}${package_name}.pfs${PFSDIR}/mount/)
	echo "$package_list"
	if [[ -n $package_list ]] ; then
		pfs_in_contaner=''
		for pack in $package_list ; do
			pfsrebuild  $pack --nopfs
			pfs_in_contaner="$pfs_in_contaner ./$pack"
		done
		mkpfs $pfs_in_contaner -o ${package_name}.pfs $@
		exitmsg "can't create contaner" $?
	else
		exitmsg "can't find packages" 4
	fi
exit
fi

if [[ -f ${fileslist} ]]; then 
  buildir="./build_${package_name}/${package_name}"
  mkdir -p "$buildir"
  tar -c --ignore-failed-read --no-recursion -T $fileslist  2>/dev/null | tar -x -C ${buildir} 2>/dev/null
  if [[ -f  ${dirsempty} ]] ; then
	cat $dirsempty | sed -e 's:^[^/]*::' -e 's:[\]:\\\\:g' | xargs -I {} mkdir -p ${buildir}/{} 
  fi
  # --nopfs parametr - make build dir and exit 
  if echo "$@" | grep -q "\-\-nopfs" ; then 
	rm -rf ./${package_name} && mv -f ${buildir} ./
  else
	mkpfs  ${buildir} -o ${package_name}.pfs $@
	exitmsg "can't create module" $?
  fi
  rm -rf ./build_${package_name}
  else
  echo "Package \"$package_name\" is not installed!" >&2; #exit 1
fi

exit 0
