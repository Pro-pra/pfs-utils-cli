#!/bin/sh
#Merge dir -> .pfs , by sfs, GPL v3
#VERSION 3.1
. /usr/bin/pfsfunc

checksfsxzb >/dev/null 2>&1
if [ $? -gt 0 ]; then
  echo "Kernel not support PFS!" >&2; exit 1
fi

ERR(){ echo "mkaufs error" exit 1 ; }
n="`mkaufs || ERR`"
nn="`echo "$n" | sed -n 's/^.*\([0-9]\)$/\1/p'`"
[ "`echo "$n" |egrep '/aufs[1-9]$'`" ] || ERR

HLP(){
echo "Usage: $0 DIRECTORY
    Collect DIRECTORY/DIRECTORYS to PFS.pfs" && exit 1
}

##mkpfs(
compression="xz"
for arg in "$@"
do
  case "${arg}" in
    "-o" | "--out-file") onuserout="on";;
    "-?" | "--help")  HLP ;exit 1;;
    "-p" | "--name" | "--name-pack" | "--name-package") usepkname="on";;
    "-n" | "--no-dirs-empty") dirs="off";;
    "-m" | "--md5") md5cr="on";;
    "-e" | "--empty" | "--no-md5") ;;
    "-no-progress" | "--no-progress") noprogress="-no-progress";;
    "-processors" | "--processors" ) numproc="on";;
    "-f" | "--fast" | "-g" ) [ "$compression_fast" ] && compression="$compression_fast" || compression="gzip";;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; HLP; exit 1;;
    *) if [ "${usepkname}" = "on" ]; then packname="${arg}"
       elif [ "${onuserout}" = "on" ]; then userout="${arg}"
       elif [ "${numproc}" = "on" ]; then useproc="-processors ${arg}"
       else pfsdir="${arg}"; fi
       onuserout="off"; usepkname="off"; usindlib="off"; numproc="off";;
  esac
done

pwddir="$(pwd)"
[ "${pfsdir}" = "" ] && pfsdir="${pwddir}"
if [ -d "${pfsdir}" ]; then
  chmod 755 "${pfsdir}"
  cd "${pfsdir}"
else
  echo "Directory \"${pfsdir}\" not found!" >&2; exit 1
fi
[ "${packname}" != "" ] && pfsname="${packname}" || pfsname="$(basename "${pfsdir}")"
echo "${pfsname}"
###mkpfs)

cd ..
pfsdir="`readlink -f "${pfsdir}"`"
d="$(find "${pfsdir}" -maxdepth 1 -type d |tail -n+2)"
[ -d "$pfsdir" ] 	|| HLP
[ "$d" ] 	|| HLP

while read i ;do
    mkpfs -d "$i" && addlayer "$nn" "$i" || exit 1
done << EOF
$d
EOF

pfsdir2="$pfsdir"
pfsname="`basename "$pfsdir" _pfs`"
###mkpfs(
[ "${pfsdir}" = "${pwddir}" ] && cd ../ || cd "${pwddir}"
[ "${userout}" = "" ] && userout="./${pfsname}.pfs"
if [ "${compression}" = "xz" ]; then
  optionscomp="-Xbcj"; uname -m | grep -q -e "86" -e "32" -e "64" && bcjcomp="x86" || bcjcomp="x86,arm"
fi
###mkpfs)
mksquashfs "${n}" "${userout}" -comp ${compression} -b 512K ${optionscomp} ${bcjcomp} -noappend ${noprogress} ${useproc} &&
delaufs "$nn"
