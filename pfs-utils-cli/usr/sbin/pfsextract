#!/bin/sh
#Extract .pfs (for PuppyRus), by Zay & «sfs», GPL v3.
#Version 0.17
#Modify 26.04.2015
. /usr/lib/libpfs

checksfsxz >/dev/null 2>&1
if [ $? -gt 0 ]; then
  echo "Kernel not support PFS!" >&2; exit 1
fi
status=0

compression="xz"
for arg in "$@"
do
  case "${arg}" in
    "-p" | "--packages" ) upacklist="yes";;
    "-no-progress" | "--no-progress") noprogress="-no-progress";;
    "-processors" | "--processors" ) numproc="on";;
    "--gzip") compression="gzip";;
    "-"*[A-Za-z]*) echo "$(basename "$0"): invalid option -- '$(echo ${arg} | tr -d '-')'" >&2; exit 1;;
    *) if [ "${upacklist}" != "yes" ]; then [ ! "${pfsname}" ] && pfsname="${arg}" || outdir="${arg}" 
       elif [ "${numproc}" = "on" ]; then useproc="-processors ${arg}"
       else listpackage="${listpackage}/tmp/.pfs/extract/$(basename "${pfsname}")/pmount/etc/packages/mount/${arg}$IFS"
       fi;;  
  esac
done
if [ "${pfsname}" = "" ]; then
  echo "Usage: $(basename "$0") FILE [DIRECTORY]"; exit 1
fi
[ ! "${outdir}" ] && outdir="$(echo "${pfsname}" | sed 's/.pfs/_pfs/g')"

if [ ! -f "${pfsname}" ]; then
  echo "File \"${pfsname}\" not found!" >&2; exit 1
fi
if [ "$(ls -A "${outdir}" 2>/dev/null)" != "" ]; then
  echo "Directory \"${outdir}\" not empty!" >&2; exit 1
fi
mkdir -p "${outdir}"
[ $? -gt 0 ] && exit 1
tmpdir="/tmp/.pfs/extract/$(basename "${pfsname}")"

if [ -d "${tmpdir}" ]; then
  rmdir "${tmpdir}/pmount" 2>/dev/null
  rmdir "${tmpdir}" 2>/dev/null
  if [ -d "${tmpdir}" ]; then
    echo "Progress is already running!" >&2; exit 1    
  fi
fi

sync
freeloop=0
looplist="$(losetupb -a)"
while :; do
  echo "${looplist}" | grep -q -F "/dev/loop${freeloop}" && freeloop="$(expr ${freeloop} + 1)" || break
done
if [ ! -b /dev/loop${freeloop} ]; then
  mknod -m660 /dev/loop${freeloop} b 7 ${freeloop}
  chown root.root /dev/loop${freeloop}
  sync
fi
if [ ! -b /dev/loop${freeloop} ]; then
  "Error! Free loop devices is not found!"; exit 1
fi

losetupb /dev/loop${freeloop} "${pfsname}"
status=$?
if [ ${status} -eq 0 ]; then
  mkdir -p "${tmpdir}/pmount"
  mountb -t squashfs -o loop /dev/loop${freeloop} "${tmpdir}/pmount" >/dev/null 2>&1
  status=$?
  if [ ${status} -gt 0 ]; then
    losetupb -d /dev/loop${freeloop}
    rmdir "${tmpdir}/pmount" 2>/dev/null
    rmdir "${tmpdir}" 2>/dev/null
    echo "Mount \"${pfsname}\": failed!" >&2; exit ${status}
  fi
else
  rmdir "${tmpdir}/pmount" 2>/dev/null
  rmdir "${tmpdir}" 2>/dev/null
  echo "Mount \"${pfsname}\": failed!" >&2; exit ${status}  
fi
sync

if [ ! "${listpackage}" ]; then
  listpackage="$(find "${tmpdir}/pmount/etc/packages/mount/" -mindepth 1 -maxdepth 1 -type d | while read package
  do
    echo -n "${package}$IFS"
  done)"
fi

echo "${listpackage}" | while read pack; do
  if [ ${status} -eq 0 ]; then
    if [ -f "${pack}/pfs.files" ]; then    
      namepack="$(basename "${pack}")"
      mkdir -p "${tmpdir}/files/${namepack}" 
      if [ -f "${pack}/pfs.dirs.empty" ]; then
        cat "${pack}/pfs.dirs.empty" | sed -e 's:^[^/]*::' -e 's:[\]:\\\\:g' -e 's:[/*]$::g' | while read dirempty; do
          mkdir -p "${tmpdir}/files/${namepack}${dirempty}"
        done
      fi
      cat "${pack}/pfs.files" | sed -e 's:^[^/]*::' -e 's:[\]:\\\\:g' -e 's:[/*]$::g' | while read file; do
        cpnamedir="${tmpdir}/files/${namepack}$(dirname "${file}")"
        mkdir -p "${cpnamedir}"
        cp -a "${tmpdir}/pmount${file}" "${cpnamedir}"
        status=$?
        if [ ${status} -gt 0 ]; then
          echo "Extract error!" >&2
          break
        fi
      done
      mkdir -p "${tmpdir}/files/${namepack}/etc/packages/mount"
      cp -a "${tmpdir}/pmount/etc/packages/mount/${namepack}" "${tmpdir}/files/${namepack}/etc/packages/mount"
      status=$?
      sync
      if [ ${status} -eq 0 ]; then
        find "${tmpdir}/pmount${file}" -type d -printf "[ -e '%p' ] && { chmod %m '%p'; chown %U:%G '%p';}\n" | sed 's#'${tmpdir}'/pmount#'${tmpdir}'/files/'${namepack}'#g' | ash
        if [ "${compression}" = "xz" ]; then
          optionscomp="-Xbcj"; uname -m | grep -q -e "86" -e "32" -e "64" && bcjcomp="x86" || bcjcomp="x86,arm"
        fi
        mksquashfs "${tmpdir}/files/${namepack}" "${outdir}/${namepack}.pfs" -comp ${compression} -b 512K ${optionscomp} ${bcjcomp} -noappend ${noprogress} ${useproc}
        status=$?
      fi
      rm -rf "${tmpdir}/files" 2>/dev/null
      if [ ${status} -gt 0 ]; then
        echo "Extract error!" >&2
        break
      fi
    fi
  fi
done

umountb -d "${tmpdir}/pmount" >/dev/null 2>&1
rmdir "${tmpdir}/pmount" 2>/dev/null
rmdir "${tmpdir}" 2>/dev/null

exit ${status}
